---
import "aos/dist/aos.css";
---
<div class="description">
    <h1 class="typewriter">
      <div class="animation">
        <div data-aos="fade-right">
          We
        </div>
        <div data-aos="fade-right"><span class=""></span></div>
      </div>
      <div data-aos="fade-left">Websites.</div>
    </h1>
</div>

<style>
  @import url("http://fonts.googleapis.com/css?family=Fjalla+One");
  
    h1 {
        color: white;
        font-size: 180px;
        font-family: 'Fjalla One', sans-serif;
        font-weight: bold;

    }
   span {
        color: rgba(0, 25, 250, 1);
    }

    .typewriter {
      display: flex
    }

    .animation {
      width: 80%;
      display:flex;
      flex-direction: row; 
      align-items: center;
      gap:50px;
      justify-content: center;
    }

    .description {
        display:flex;
        flex-direction: row;
        height: 100vh;
        width: 70%;
        margin-top: -110px;
    }

    h1 {
      width: 100%;
      display: flex;
      flex-direction: column;
      align-items: center;
      margin: 0;
      height: 100%;
      gap: 0px;
      justify-content: center;
    }

    @media (max-width: 1000px) {
      h1 {
        font-size: 100px;
      }
    }
    
    @media only screen and (max-width: 500px) {
      h1 {
        font-size: 70px;
        display:flex;
        flex-direction: column;
        gap:1px;
      }

      .animation {
        width: 100%;
        display: flex; 
        flex-direction: column; 
        gap:2px;
      } 

    }

    @media (max-width: 400px) {
      h1 {
        font-size: 50px;

      }
    }
</style>


<script>

document.addEventListener('DOMContentLoaded',function(event){
  // array with texts to type in typewriter
  var dataText = [ "Create", "Renew"];
  
  // type one text in the typwriter
  // keeps calling itself until the text is finished
  function typeWriter(text: string, i:number, fnCallback:CallableFunction) {
    // chekc if text isn't finished yet
    if (i < (text.length)) {
      // add next character to h1
      //@ts-ignore
     document.querySelector("span").innerHTML = text.substring(0, i+1) +'<span aria-hidden="true">|</span>';

      // wait for a while and call this function again for next character
      setTimeout(function() {
        typeWriter(text, i + 1, fnCallback)
      }, 300);
    }
    // text finished, call callback if there is a callback function
    else if (typeof fnCallback == 'function') {
      // call callback after timeout
      setTimeout(fnCallback, 900);
    }
  }
  // New function for deleting text
  function deleteWriter(text: string, i: number, fnCallback: CallableFunction) {
    // check if text isn't finished yet
    if (i >= 0) {
      // remove the next character from h1
      //@ts-ignore
      document.querySelector("span").innerHTML = text.substring(0, i) + '<span aria-hidden="true">|</span>';

      // wait for a while and call this function again for next character
      setTimeout(function() {
        deleteWriter(text, i - 1, fnCallback)
      }, 200);
    }
    // text finished, call callback if there is a callback function
    else if (typeof fnCallback == 'function') {
      // call callback after timeout
      setTimeout(fnCallback, 900);
    }
  }

  // start a typewriter animation for a text in the dataText array
  function StartTextAnimation(i: number) {
    if (typeof dataText[i] == 'undefined') {
      setTimeout(function() {
        StartTextAnimation(0);
      }, 800);
    }
    // check if dataText[i] exists
    if (i < dataText.length) {
      // text exists! start typewriter animation
      typeWriter(dataText[i], 0, function() {
        // after callback (and whole text has been animated), start deleting text
        deleteWriter(dataText[i], dataText[i].length, function() {
          // after callback (and whole text has been deleted), start next text
          StartTextAnimation(i + 1);
        });
      });
    }
  }
  // start the text animation
  StartTextAnimation(0);
});

</script>
</script>
